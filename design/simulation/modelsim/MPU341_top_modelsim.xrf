vendor_name = ModelSim
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/MPU341.sdc
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/program_sequencer.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/program_memory.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/MPU341_top.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/instruction_decoder.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/data_memory.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/computational_unit.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/rom.hex
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/rom.qip
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/rom.v
source_file = 1, C:/Users/Austin/Documents/GitHub/MPU341/design/db/MPU341_top.cbx.xml
design_name = instruction_decoder
instance = comp, \jmp~output , jmp~output, instruction_decoder, 1
instance = comp, \jmp_nz~output , jmp_nz~output, instruction_decoder, 1
instance = comp, \ir_nibble[0]~output , ir_nibble[0]~output, instruction_decoder, 1
instance = comp, \ir_nibble[1]~output , ir_nibble[1]~output, instruction_decoder, 1
instance = comp, \ir_nibble[2]~output , ir_nibble[2]~output, instruction_decoder, 1
instance = comp, \ir_nibble[3]~output , ir_nibble[3]~output, instruction_decoder, 1
instance = comp, \i_sel~output , i_sel~output, instruction_decoder, 1
instance = comp, \y_sel~output , y_sel~output, instruction_decoder, 1
instance = comp, \x_sel~output , x_sel~output, instruction_decoder, 1
instance = comp, \source_sel[0]~output , source_sel[0]~output, instruction_decoder, 1
instance = comp, \source_sel[1]~output , source_sel[1]~output, instruction_decoder, 1
instance = comp, \source_sel[2]~output , source_sel[2]~output, instruction_decoder, 1
instance = comp, \source_sel[3]~output , source_sel[3]~output, instruction_decoder, 1
instance = comp, \reg_en[0]~output , reg_en[0]~output, instruction_decoder, 1
instance = comp, \reg_en[1]~output , reg_en[1]~output, instruction_decoder, 1
instance = comp, \reg_en[2]~output , reg_en[2]~output, instruction_decoder, 1
instance = comp, \reg_en[3]~output , reg_en[3]~output, instruction_decoder, 1
instance = comp, \reg_en[4]~output , reg_en[4]~output, instruction_decoder, 1
instance = comp, \reg_en[5]~output , reg_en[5]~output, instruction_decoder, 1
instance = comp, \reg_en[6]~output , reg_en[6]~output, instruction_decoder, 1
instance = comp, \reg_en[7]~output , reg_en[7]~output, instruction_decoder, 1
instance = comp, \reg_en[8]~output , reg_en[8]~output, instruction_decoder, 1
instance = comp, \clk~input , clk~input, instruction_decoder, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, instruction_decoder, 1
instance = comp, \next_instr[6]~input , next_instr[6]~input, instruction_decoder, 1
instance = comp, \ir[6] , ir[6], instruction_decoder, 1
instance = comp, \sync_reset~input , sync_reset~input, instruction_decoder, 1
instance = comp, \next_instr[7]~input , next_instr[7]~input, instruction_decoder, 1
instance = comp, \ir[7] , ir[7], instruction_decoder, 1
instance = comp, \source_sel~2 , source_sel~2, instruction_decoder, 1
instance = comp, \next_instr[4]~input , next_instr[4]~input, instruction_decoder, 1
instance = comp, \ir[4] , ir[4], instruction_decoder, 1
instance = comp, \next_instr[5]~input , next_instr[5]~input, instruction_decoder, 1
instance = comp, \ir[5] , ir[5], instruction_decoder, 1
instance = comp, \jmp~4 , jmp~4, instruction_decoder, 1
instance = comp, \reg_en~14 , reg_en~14, instruction_decoder, 1
instance = comp, \jmp_nz~4 , jmp_nz~4, instruction_decoder, 1
instance = comp, \next_instr[0]~input , next_instr[0]~input, instruction_decoder, 1
instance = comp, \ir[0] , ir[0], instruction_decoder, 1
instance = comp, \next_instr[1]~input , next_instr[1]~input, instruction_decoder, 1
instance = comp, \ir[1] , ir[1], instruction_decoder, 1
instance = comp, \next_instr[2]~input , next_instr[2]~input, instruction_decoder, 1
instance = comp, \ir[2] , ir[2], instruction_decoder, 1
instance = comp, \next_instr[3]~input , next_instr[3]~input, instruction_decoder, 1
instance = comp, \ir[3] , ir[3], instruction_decoder, 1
instance = comp, \i_sel~0 , i_sel~0, instruction_decoder, 1
instance = comp, \i_sel~1 , i_sel~1, instruction_decoder, 1
instance = comp, \i_sel~2 , i_sel~2, instruction_decoder, 1
instance = comp, \y_sel~0 , y_sel~0, instruction_decoder, 1
instance = comp, \x_sel~0 , x_sel~0, instruction_decoder, 1
instance = comp, \Equal2~0 , Equal2~0, instruction_decoder, 1
instance = comp, \source_sel~3 , source_sel~3, instruction_decoder, 1
instance = comp, \source_sel~8 , source_sel~8, instruction_decoder, 1
instance = comp, \source_sel~4 , source_sel~4, instruction_decoder, 1
instance = comp, \source_sel~5 , source_sel~5, instruction_decoder, 1
instance = comp, \source_sel~6 , source_sel~6, instruction_decoder, 1
instance = comp, \source_sel~7 , source_sel~7, instruction_decoder, 1
instance = comp, \reg_en~15 , reg_en~15, instruction_decoder, 1
instance = comp, \reg_en~16 , reg_en~16, instruction_decoder, 1
instance = comp, \reg_en~28 , reg_en~28, instruction_decoder, 1
instance = comp, \reg_en~18 , reg_en~18, instruction_decoder, 1
instance = comp, \reg_en~5 , reg_en~5, instruction_decoder, 1
instance = comp, \reg_en~30 , reg_en~30, instruction_decoder, 1
instance = comp, \reg_en~17 , reg_en~17, instruction_decoder, 1
instance = comp, \reg_en~19 , reg_en~19, instruction_decoder, 1
instance = comp, \reg_en~20 , reg_en~20, instruction_decoder, 1
instance = comp, \reg_en~21 , reg_en~21, instruction_decoder, 1
instance = comp, \reg_en~29 , reg_en~29, instruction_decoder, 1
instance = comp, \reg_en~22 , reg_en~22, instruction_decoder, 1
instance = comp, \reg_en~23 , reg_en~23, instruction_decoder, 1
instance = comp, \reg_en~25 , reg_en~25, instruction_decoder, 1
instance = comp, \reg_en~24 , reg_en~24, instruction_decoder, 1
instance = comp, \reg_en~26 , reg_en~26, instruction_decoder, 1
instance = comp, \reg_en~27 , reg_en~27, instruction_decoder, 1
instance = comp, \reg_en~11 , reg_en~11, instruction_decoder, 1
instance = comp, \reg_en~31 , reg_en~31, instruction_decoder, 1
